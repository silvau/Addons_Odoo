# -*- encoding: utf-8 -*-
###########################################################################
#    Module Writen to OpenERP, Open Source Management Solution
#
#    Copyright (c) 2012 Zenpar - http://www.zeval.com.mx/
#    All Rights Reserved.
############################################################################
#    Coded by: jsolorzano@zeval.com.mx
#    Launchpad Project Manager for Publication: Orlando Zentella ozentella@zeval.com.mx
############################################################################
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Affero General Public License as
#    published by the Free Software Foundation, either version 3 of the
#    License, or (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU Affero General Public License for more details.
#
#    You should have received a copy of the GNU Affero General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
##############################################################################
from openerp.osv import osv, fields
#from lxml import etree
#import pdb
class sale_order(osv.osv):
    _inherit = 'sale.order'

    '''    def fields_view_get(self, cr, uid, view_id=None, view_type=False, context=None, toolbar=False, submenu=False):
        res = super(sale_order, self).fields_view_get(cr, uid, view_id=view_id, view_type=view_type, context=context, toolbar=toolbar, submenu=submenu)
        users_obj = self.pool.get('res.users')
        shops = users_obj.browse(cr,uid, uid, context=context).shops
        shop_list=()
        for shop in shops:
            shop_list=shop_list+(str(shop.id),)
        dominio=[]
        dominio.append(('shop_id','in',shop_list))
        doc = etree.XML(res['arch'])
        for node in doc.xpath("//field[@name='shop_id']"):
            node.set('domain',str(dominio))
        res['arch'] = etree.tostring(doc)
#        pdb.set_trace()
        return res
'''
    
'''    def search(self, cr, uid, args2, offset=0, limit=None, order=None, context=None, count=False):
        uid
        users_obj = self.pool.get('res.users')
        shops = users_obj.browse(cr,uid, uid, context=context).shops
        shop_list=[]
        for shop in shops:
            shop_list=shop_list+[str(shop.id)]
        dominio=[]
        dominio.append(['shop_id.id','in',shop_list])
        
#        pdb.set_trace()
        args2.extend(dominio)
        res = super(sale_order, self).search(cr,uid,args2,offset=offset,limit=limit,order=order,context=context,count=count)


        return res
''' 
    def _prepare_invoice(self, cr, uid, order, lines, context=None):
        res=super(sale.order,self)._prepare_invoice(cr,uid,order,lines,context=context)
        res.update({'shop_id':self.shop_id})
        return res


